# see https://circleci.com/docs/2.0/configuration-reference
version: 2
jobs:

  code_analysis_nodejs:

  unit_test_nodejs:

  integration_test_nodejs:

  code_analysis_go:

  build:
    description: "Default build job, will be removed soon"
    parameters:
      source_root:
        description: "Which sub folder is being built."
        type: string
    docker:
      - image: paulvitic/peof-circleci:20190803185216
        docker_layer_caching: true

      - image: circleci/mongo:4
        environment:
          ENV MONGO_INITDB_ROOT_USERNAME: root
          ENV MONGO_INITDB_ROOT_PASSWORD: password
          ENV MONGO_INITDB_DATABASE: admin

      - image: rabbitmq:3
        environment:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
          RABBITMQ_DEFAULT_VHOST: /

    steps:
      - checkout

      - run:
          name: Wait for RabbitMQ
          command: wait-for-container RabbitMQ localhost 5672 20

      - run:
          name: Wait for MongoDB
          command: wait-for-container MongoDB localhost 27017 20

      - run:
          name: Initialize MongoDB
          command: |
            mongo localhost:27017 < /home/circleci/mongo/mongo-init.js

      # static code analysis & coverage
      - run:
          name: Static code analysis
          command: |
            pwd
            cd /home/circleci/project/<< parameters.source_root >>
            npm install
            eslint ./src --format junit --output-file /home/circleci/project/<< parameters.source_root >>/reports/eslint.xml
      - store_test_results:
          path: /home/circleci/project/<< parameters.source_root >>/reports
      - store_artifacts:
          path: /home/circleci/project/<< parameters.source_root >>/reports

      - run:
          name: Copy organization source into GOPATH src directory and pull all dependencies
          command: |
            cp -r /home/circleci/project/organization/src/organization.peof /go/src/organization.peof
            cd /go/src/organization.peof
            go get -v -t -d ./...

      - run:
          name: Execute tests
          environment:
            PROFILE: "ci"
          command: |
            go test -v ./...

  deploy_heroku:
    description: "Deploy current branch to specified heroku app"
    parameters:
      heroku_app:
        description: "Where to deploy"
        type: string
      extra_git_push_args:
        description: "More git push flags (e.g. -f)"
        default: ""
        type: string
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - run:
          name: Deploy branch to Heroku
          command: git push << parameters.extra_git_push_args >> https://heroku:$HEROKU_API_KEY@git.heroku.com/<< parameters.heroku_app >>.git $CIRCLE_BRANCH:master

workflows:
  version: 2
  code_analysis_organization-ui:
    jobs:
      - build:
          source_root: organization-ui
          # this contexts is maintained at cirleci
          # context: peof-organization-ui
          filters:
            branches:
              only:
                # run the job only for commit to branches which start with name "organization-ui/"
                - /organization-ui\/.*/