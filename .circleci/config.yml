version: 2.1
jobs:
  code_analysis_nodejs:
    description: "Static code analysis on Nodejs app"
    parameters:
      source_root:
        description: "Which sub folder is being built."
        type: string
    docker:
      - image: paulvitic/peof-circleci-nodejs:20190826180803
    steps:
      - checkout
      - run:
          name: Static code analysis with Eslint
          command: |
            pwd
            cd /home/circleci/project/<< parameters.source_root >>
            npm install
            eslint ./src --format junit --output-file /home/circleci/project/<< parameters.source_root >>/reports/eslint.xml
      - store_test_results:
          path: /home/circleci/project/<< parameters.source_root >>/reports
      - store_artifacts:
          path: /home/circleci/project/<< parameters.source_root >>/reports

  deploy_to_test_environment:
    description: "Deploy to Heroku test environment"
    parameters:
      source_root:
        description: "Which sub folder is being built."
        type: string
      heroku_app:
        description: "Where to deploy"
        type: string
      extra_git_push_args:
        description: "More git push flags (e.g. -f)"
        default: ""
        type: string
    docker:
      - image: paulvitic/peof-circleci:20190827105003
    steps:
      - checkout
      - run:
          name: Deploy branch to Heroku
          command: |
            git subtree push --prefix << parameters.source_root >> https://heroku:$HEROKU_API_KEY@git.heroku.com/<< parameters.heroku_app >>.git master

  deploy_to_staging_environment:
    description: "Deploy to Heroku staging environment"
    docker:
      - image: paulvitic/peof-circleci:20190827105003
    steps:
      # see: https://circleci-public.github.io/pipeline-preview-docs/pipeline_variables_reference.html
      - run: echo "The PR source branch of this pipeline is << pipeline.pull_request.source_branch >>"

  #unit_test_nodejs:

  #integration_test_nodejs:

  #code_analysis_go:

  build:
    docker:
      - image: paulvitic/peof-circleci:20190803185216

      - image: circleci/mongo:4
        environment:
          ENV MONGO_INITDB_ROOT_USERNAME: root
          ENV MONGO_INITDB_ROOT_PASSWORD: password
          ENV MONGO_INITDB_DATABASE: admin

      - image: rabbitmq:3
        environment:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
          RABBITMQ_DEFAULT_VHOST: /

    steps:
      - checkout

      - run:
          name: Wait for RabbitMQ
          command: wait-for-container RabbitMQ localhost 5672 20

      - run:
          name: Wait for MongoDB
          command: wait-for-container MongoDB localhost 27017 20

      - run:
          name: Initialize MongoDB
          command: |
            mongo localhost:27017 < /home/circleci/mongo/mongo-init.js

      - run:
          name: Copy organization source into GOPATH src directory and pull all dependencies
          command: |
            cp -r /home/circleci/project/organization/src/organization.peof /go/src/organization.peof
            cd /go/src/organization.peof
            go get -v -t -d ./...

      - run:
          name: Execute tests
          environment:
            PROFILE: "ci"
          command: |
            go test -v ./...


workflows:
  version: 2
  code_analysis_organization-ui:
    jobs:
      - code_analysis_nodejs:
          source_root: organization-ui
          filters:
            branches:
              only:
                - /organization-ui\/.*/
  build_framework_ui:
    jobs:
      - code_analysis_nodejs:
          source_root: framework-ui
          filters:
            branches:
              only:
                - /framework-ui\/.*/
      - deploy_to_test_environment:
          context: peof # set on CircleCI to hold secrets such as $HEROKU_API_KEY
          source_root: framework-ui
          heroku_app: framework-ui-test
          filters:
            branches:
              only:
                - /framework-ui\/.*/
          requires:
            - code_analysis_nodejs
  deploy_to_staging_environment:
    jobs:
      - deploy_to_staging_environment:
          filters:
            branches:
              only:
                - /master/